version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: routecalc-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-rotas_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-rotas_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: routecalc-backend
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-rotas_db}
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/__pycache__
      - /app/.pytest_cache
    networks:
      - app-network
    restart: unless-stopped

  # Backend para produção (opcional)
  backend-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: routecalc-backend-prod
    ports:
      - "50002:50001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-rotas_db}
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - production

  # PgAdmin para gerenciamento do banco (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: routecalc-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@routecalc.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
